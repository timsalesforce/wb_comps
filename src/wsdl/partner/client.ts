import { Client as SoapClient, createClientAsync as soapCreateClientAsync } from "soap";
import { Login } from "./definitions/Login";
import { LoginResponse } from "./definitions/LoginResponse";
import { DescribeSObject } from "./definitions/DescribeSObject";
import { DescribeSObjectResponse } from "./definitions/DescribeSObjectResponse";
import { DescribeSObjects } from "./definitions/DescribeSObjects";
import { DescribeSObjectsResponse } from "./definitions/DescribeSObjectsResponse";
import { DescribeGlobal } from "./definitions/DescribeGlobal";
import { DescribeGlobalResponse } from "./definitions/DescribeGlobalResponse";
import { DescribeDataCategoryGroups } from "./definitions/DescribeDataCategoryGroups";
import { DescribeDataCategoryGroupsResponse } from "./definitions/DescribeDataCategoryGroupsResponse";
import { DescribeDataCategoryGroupStructures } from "./definitions/DescribeDataCategoryGroupStructures";
import { DescribeDataCategoryGroupStructuresResponse } from "./definitions/DescribeDataCategoryGroupStructuresResponse";
import { DescribeDataCategoryMappings } from "./definitions/DescribeDataCategoryMappings";
import { DescribeDataCategoryMappingsResponse } from "./definitions/DescribeDataCategoryMappingsResponse";
import { DescribeKnowledgeSettings } from "./definitions/DescribeKnowledgeSettings";
import { DescribeKnowledgeSettingsResponse } from "./definitions/DescribeKnowledgeSettingsResponse";
import { DescribeAppMenu } from "./definitions/DescribeAppMenu";
import { DescribeAppMenuResponse } from "./definitions/DescribeAppMenuResponse";
import { DescribeGlobalTheme } from "./definitions/DescribeGlobalTheme";
import { DescribeGlobalThemeResponse } from "./definitions/DescribeGlobalThemeResponse";
import { DescribeTheme } from "./definitions/DescribeTheme";
import { DescribeThemeResponse } from "./definitions/DescribeThemeResponse";
import { DescribeLayout } from "./definitions/DescribeLayout";
import { DescribeLayoutResponse } from "./definitions/DescribeLayoutResponse";
import { DescribeSoftphoneLayout } from "./definitions/DescribeSoftphoneLayout";
import { DescribeSoftphoneLayoutResponse } from "./definitions/DescribeSoftphoneLayoutResponse";
import { DescribeSearchLayouts } from "./definitions/DescribeSearchLayouts";
import { DescribeSearchLayoutsResponse } from "./definitions/DescribeSearchLayoutsResponse";
import { DescribeSearchableEntities } from "./definitions/DescribeSearchableEntities";
import { DescribeSearchableEntitiesResponse } from "./definitions/DescribeSearchableEntitiesResponse";
import { DescribeSearchScopeOrder } from "./definitions/DescribeSearchScopeOrder";
import { DescribeSearchScopeOrderResponse } from "./definitions/DescribeSearchScopeOrderResponse";
import { DescribeCompactLayouts } from "./definitions/DescribeCompactLayouts";
import { DescribeCompactLayoutsResponse } from "./definitions/DescribeCompactLayoutsResponse";
import { DescribePathAssistants } from "./definitions/DescribePathAssistants";
import { DescribePathAssistantsResponse } from "./definitions/DescribePathAssistantsResponse";
import { DescribeApprovalLayout } from "./definitions/DescribeApprovalLayout";
import { DescribeApprovalLayoutResponse } from "./definitions/DescribeApprovalLayoutResponse";
import { DescribeSoqlListViews } from "./definitions/DescribeSoqlListViews";
import { DescribeSoqlListViewsResponse } from "./definitions/DescribeSoqlListViewsResponse";
import { ExecuteListView } from "./definitions/ExecuteListView";
import { ExecuteListViewResponse } from "./definitions/ExecuteListViewResponse";
import { DescribeSObjectListViews } from "./definitions/DescribeSObjectListViews";
import { DescribeSObjectListViewsResponse } from "./definitions/DescribeSObjectListViewsResponse";
import { DescribeTabs } from "./definitions/DescribeTabs";
import { DescribeTabsResponse } from "./definitions/DescribeTabsResponse";
import { DescribeAllTabs } from "./definitions/DescribeAllTabs";
import { DescribeAllTabsResponse } from "./definitions/DescribeAllTabsResponse";
import { DescribePrimaryCompactLayouts } from "./definitions/DescribePrimaryCompactLayouts";
import { DescribePrimaryCompactLayoutsResponse } from "./definitions/DescribePrimaryCompactLayoutsResponse";
import { Create } from "./definitions/Create";
import { CreateResponse } from "./definitions/CreateResponse";
import { Update } from "./definitions/Update";
import { UpdateResponse } from "./definitions/UpdateResponse";
import { Upsert } from "./definitions/Upsert";
import { UpsertResponse } from "./definitions/UpsertResponse";
import { Merge } from "./definitions/Merge";
import { MergeResponse } from "./definitions/MergeResponse";
import { Delete } from "./definitions/Delete";
import { DeleteResponse } from "./definitions/DeleteResponse";
import { Undelete } from "./definitions/Undelete";
import { UndeleteResponse } from "./definitions/UndeleteResponse";
import { EmptyRecycleBin } from "./definitions/EmptyRecycleBin";
import { EmptyRecycleBinResponse } from "./definitions/EmptyRecycleBinResponse";
import { Retrieve } from "./definitions/Retrieve";
import { RetrieveResponse } from "./definitions/RetrieveResponse";
import { Process } from "./definitions/Process";
import { ProcessResponse } from "./definitions/ProcessResponse";
import { ConvertLead } from "./definitions/ConvertLead";
import { ConvertLeadResponse } from "./definitions/ConvertLeadResponse";
import { Logout } from "./definitions/Logout";
import { LogoutResponse } from "./definitions/LogoutResponse";
import { InvalidateSessions } from "./definitions/InvalidateSessions";
import { InvalidateSessionsResponse } from "./definitions/InvalidateSessionsResponse";
import { GetDeleted } from "./definitions/GetDeleted";
import { GetDeletedResponse } from "./definitions/GetDeletedResponse";
import { GetUpdated } from "./definitions/GetUpdated";
import { GetUpdatedResponse } from "./definitions/GetUpdatedResponse";
import { Query } from "./definitions/Query";
import { QueryResponse } from "./definitions/QueryResponse";
import { QueryAll } from "./definitions/QueryAll";
import { QueryAllResponse } from "./definitions/QueryAllResponse";
import { QueryMore } from "./definitions/QueryMore";
import { QueryMoreResponse } from "./definitions/QueryMoreResponse";
import { Search } from "./definitions/Search";
import { SearchResponse } from "./definitions/SearchResponse";
import { GetServerTimestamp } from "./definitions/GetServerTimestamp";
import { GetServerTimestampResponse } from "./definitions/GetServerTimestampResponse";
import { SetPassword } from "./definitions/SetPassword";
import { SetPasswordResponse } from "./definitions/SetPasswordResponse";
import { ChangeOwnPassword } from "./definitions/ChangeOwnPassword";
import { ChangeOwnPasswordResponse } from "./definitions/ChangeOwnPasswordResponse";
import { ResetPassword } from "./definitions/ResetPassword";
import { ResetPasswordResponse } from "./definitions/ResetPasswordResponse";
import { GetUserInfo } from "./definitions/GetUserInfo";
import { GetUserInfoResponse } from "./definitions/GetUserInfoResponse";
import { DeleteByExample } from "./definitions/DeleteByExample";
import { DeleteByExampleResponse } from "./definitions/DeleteByExampleResponse";
import { SendEmailMessage } from "./definitions/SendEmailMessage";
import { SendEmailMessageResponse } from "./definitions/SendEmailMessageResponse";
import { SendEmail } from "./definitions/SendEmail";
import { SendEmailResponse } from "./definitions/SendEmailResponse";
import { RenderEmailTemplate } from "./definitions/RenderEmailTemplate";
import { RenderEmailTemplateResponse } from "./definitions/RenderEmailTemplateResponse";
import { RenderStoredEmailTemplate } from "./definitions/RenderStoredEmailTemplate";
import { RenderStoredEmailTemplateResponse } from "./definitions/RenderStoredEmailTemplateResponse";
import { PerformQuickActions } from "./definitions/PerformQuickActions";
import { PerformQuickActionsResponse } from "./definitions/PerformQuickActionsResponse";
import { DescribeQuickActions } from "./definitions/DescribeQuickActions";
import { DescribeQuickActionsResponse } from "./definitions/DescribeQuickActionsResponse";
import { DescribeQuickActionsForRecordType } from "./definitions/DescribeQuickActionsForRecordType";
import { DescribeQuickActionsForRecordTypeResponse } from "./definitions/DescribeQuickActionsForRecordTypeResponse";
import { DescribeAvailableQuickActions } from "./definitions/DescribeAvailableQuickActions";
import { DescribeAvailableQuickActionsResponse } from "./definitions/DescribeAvailableQuickActionsResponse";
import { RetrieveQuickActionTemplates } from "./definitions/RetrieveQuickActionTemplates";
import { RetrieveQuickActionTemplatesResponse } from "./definitions/RetrieveQuickActionTemplatesResponse";
import { RetrieveMassQuickActionTemplates } from "./definitions/RetrieveMassQuickActionTemplates";
import { RetrieveMassQuickActionTemplatesResponse } from "./definitions/RetrieveMassQuickActionTemplatesResponse";
import { DescribeVisualForce } from "./definitions/DescribeVisualForce";
import { DescribeVisualForceResponse } from "./definitions/DescribeVisualForceResponse";
import { FindDuplicates } from "./definitions/FindDuplicates";
import { FindDuplicatesResponse } from "./definitions/FindDuplicatesResponse";
import { FindDuplicatesByIds } from "./definitions/FindDuplicatesByIds";
import { FindDuplicatesByIdsResponse } from "./definitions/FindDuplicatesByIdsResponse";
import { DescribeNouns } from "./definitions/DescribeNouns";
import { DescribeNounsResponse } from "./definitions/DescribeNounsResponse";
import { SforceService } from "./services/SforceService";

export interface PartnerClient extends SoapClient {
    SforceService: SforceService;
    loginAsync(login: Login): Promise<[result: LoginResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSObjectAsync(describeSObject: DescribeSObject): Promise<[result: DescribeSObjectResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSObjectsAsync(describeSObjects: DescribeSObjects): Promise<[result: DescribeSObjectsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeGlobalAsync(describeGlobal: DescribeGlobal): Promise<[result: DescribeGlobalResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeDataCategoryGroupsAsync(describeDataCategoryGroups: DescribeDataCategoryGroups): Promise<[result: DescribeDataCategoryGroupsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeDataCategoryGroupStructuresAsync(describeDataCategoryGroupStructures: DescribeDataCategoryGroupStructures): Promise<[result: DescribeDataCategoryGroupStructuresResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeDataCategoryMappingsAsync(describeDataCategoryMappings: DescribeDataCategoryMappings): Promise<[result: DescribeDataCategoryMappingsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeKnowledgeSettingsAsync(describeKnowledgeSettings: DescribeKnowledgeSettings): Promise<[result: DescribeKnowledgeSettingsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeAppMenuAsync(describeAppMenu: DescribeAppMenu): Promise<[result: DescribeAppMenuResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeGlobalThemeAsync(describeGlobalTheme: DescribeGlobalTheme): Promise<[result: DescribeGlobalThemeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeThemeAsync(describeTheme: DescribeTheme): Promise<[result: DescribeThemeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeLayoutAsync(describeLayout: DescribeLayout): Promise<[result: DescribeLayoutResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSoftphoneLayoutAsync(describeSoftphoneLayout: DescribeSoftphoneLayout): Promise<[result: DescribeSoftphoneLayoutResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSearchLayoutsAsync(describeSearchLayouts: DescribeSearchLayouts): Promise<[result: DescribeSearchLayoutsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSearchableEntitiesAsync(describeSearchableEntities: DescribeSearchableEntities): Promise<[result: DescribeSearchableEntitiesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSearchScopeOrderAsync(describeSearchScopeOrder: DescribeSearchScopeOrder): Promise<[result: DescribeSearchScopeOrderResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeCompactLayoutsAsync(describeCompactLayouts: DescribeCompactLayouts): Promise<[result: DescribeCompactLayoutsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describePathAssistantsAsync(describePathAssistants: DescribePathAssistants): Promise<[result: DescribePathAssistantsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeApprovalLayoutAsync(describeApprovalLayout: DescribeApprovalLayout): Promise<[result: DescribeApprovalLayoutResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSoqlListViewsAsync(describeSoqlListViews: DescribeSoqlListViews): Promise<[result: DescribeSoqlListViewsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    executeListViewAsync(executeListView: ExecuteListView): Promise<[result: ExecuteListViewResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeSObjectListViewsAsync(describeSObjectListViews: DescribeSObjectListViews): Promise<[result: DescribeSObjectListViewsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeTabsAsync(describeTabs: DescribeTabs): Promise<[result: DescribeTabsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeAllTabsAsync(describeAllTabs: DescribeAllTabs): Promise<[result: DescribeAllTabsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describePrimaryCompactLayoutsAsync(describePrimaryCompactLayouts: DescribePrimaryCompactLayouts): Promise<[result: DescribePrimaryCompactLayoutsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    createAsync(create: Create): Promise<[result: CreateResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    updateAsync(update: Update): Promise<[result: UpdateResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    upsertAsync(upsert: Upsert): Promise<[result: UpsertResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    mergeAsync(merge: Merge): Promise<[result: MergeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    deleteAsync(deleteParam: Delete): Promise<[result: DeleteResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    undeleteAsync(undelete: Undelete): Promise<[result: UndeleteResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    emptyRecycleBinAsync(emptyRecycleBin: EmptyRecycleBin): Promise<[result: EmptyRecycleBinResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    retrieveAsync(retrieve: Retrieve): Promise<[result: RetrieveResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    processAsync(process: Process): Promise<[result: ProcessResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    convertLeadAsync(convertLead: ConvertLead): Promise<[result: ConvertLeadResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    logoutAsync(logout: Logout): Promise<[result: LogoutResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    invalidateSessionsAsync(invalidateSessions: InvalidateSessions): Promise<[result: InvalidateSessionsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    getDeletedAsync(getDeleted: GetDeleted): Promise<[result: GetDeletedResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    getUpdatedAsync(getUpdated: GetUpdated): Promise<[result: GetUpdatedResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    queryAsync(query: Query): Promise<[result: QueryResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    queryAllAsync(queryAll: QueryAll): Promise<[result: QueryAllResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    queryMoreAsync(queryMore: QueryMore): Promise<[result: QueryMoreResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    searchAsync(search: Search): Promise<[result: SearchResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    getServerTimestampAsync(getServerTimestamp: GetServerTimestamp): Promise<[result: GetServerTimestampResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    setPasswordAsync(setPassword: SetPassword): Promise<[result: SetPasswordResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    changeOwnPasswordAsync(changeOwnPassword: ChangeOwnPassword): Promise<[result: ChangeOwnPasswordResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    resetPasswordAsync(resetPassword: ResetPassword): Promise<[result: ResetPasswordResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    getUserInfoAsync(getUserInfo: GetUserInfo): Promise<[result: GetUserInfoResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    deleteByExampleAsync(deleteByExample: DeleteByExample): Promise<[result: DeleteByExampleResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    sendEmailMessageAsync(sendEmailMessage: SendEmailMessage): Promise<[result: SendEmailMessageResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    sendEmailAsync(sendEmail: SendEmail): Promise<[result: SendEmailResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    renderEmailTemplateAsync(renderEmailTemplate: RenderEmailTemplate): Promise<[result: RenderEmailTemplateResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    renderStoredEmailTemplateAsync(renderStoredEmailTemplate: RenderStoredEmailTemplate): Promise<[result: RenderStoredEmailTemplateResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    performQuickActionsAsync(performQuickActions: PerformQuickActions): Promise<[result: PerformQuickActionsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeQuickActionsAsync(describeQuickActions: DescribeQuickActions): Promise<[result: DescribeQuickActionsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeQuickActionsForRecordTypeAsync(describeQuickActionsForRecordType: DescribeQuickActionsForRecordType): Promise<[result: DescribeQuickActionsForRecordTypeResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeAvailableQuickActionsAsync(describeAvailableQuickActions: DescribeAvailableQuickActions): Promise<[result: DescribeAvailableQuickActionsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    retrieveQuickActionTemplatesAsync(retrieveQuickActionTemplates: RetrieveQuickActionTemplates): Promise<[result: RetrieveQuickActionTemplatesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    retrieveMassQuickActionTemplatesAsync(retrieveMassQuickActionTemplates: RetrieveMassQuickActionTemplates): Promise<[result: RetrieveMassQuickActionTemplatesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeVisualForceAsync(describeVisualForce: DescribeVisualForce): Promise<[result: DescribeVisualForceResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    findDuplicatesAsync(findDuplicates: FindDuplicates): Promise<[result: FindDuplicatesResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    findDuplicatesByIdsAsync(findDuplicatesByIds: FindDuplicatesByIds): Promise<[result: FindDuplicatesByIdsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
    describeNounsAsync(describeNouns: DescribeNouns): Promise<[result: DescribeNounsResponse, rawResponse: any, soapHeader: any, rawRequest: any]>;
}

/** Create PartnerClient */
export function createClientAsync(...args: Parameters<typeof soapCreateClientAsync>): Promise<PartnerClient> {
    return soapCreateClientAsync(args[0], args[1], args[2]) as any;
}
